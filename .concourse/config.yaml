
jobs:

- name: fetch-lint-build-test-release
  plan:
    - get: runner-image
    - get: radicle-http-api
      trigger: true

    - task: fetch-deps
      image: runner-image
      config:
        platform: linux
        params:
          CARGO_HOME: /cargo_home
          RUSTUP_HOME: /rustup_home
        run:
          dir: radicle-http-api
          path: /bin/bash
          args:
            - -c
            - |
              echo "Home: $HOME"
              . "$HOME/.cargo/env"
              mkdir -p ${CARGO_HOME}
              cargo fetch --locked
              ls -al ~/.cargo
              ls -al ${CARGO_HOME}
        caches:
          - path: /cargo_home
          - path: /rustup_home
        inputs:
          - name: radicle-http-api
        outputs:
          - name: cargo_home
            path: /cargo_home
          - name: rustup_home
            path: /rustup_home
          - name: cargo_output
            path: target


    - task: lint
      image: runner-image
      config:
        platform: linux
        caches:
          - path: /cargo_home
          - path: /rustup_home
        inputs:
          - name: radicle-http-api
          - name: cargo_home
            path: /cargo_home
          - name: rustup_home
            path: /rustup_home
          - name: cargo_output
            path: /cargo_output
        outputs:
          - name: cargo_output
            path: /cargo_output
        params:
          CARGO_HOME: /cargo_home
          RUSTUP_HOME: /rustup_home
          CARGO_TARGET_DIR: /cargo_output
        run:
          dir: radicle-http-api
          path: /bin/bash
          args:
            - -c
            - |
              . "$HOME/.cargo/env"
              cargo clippy --all --tests
              cargo fmt --all --check
              cargo doc --all --all-features

    - task: cargo-test-all
      image: runner-image
      config:
        platform: linux
        caches:
          - path: /cargo_home
          - path: /rustup_home
        inputs:
          - name: radicle-http-api
          - name: cargo_home
            path: /cargo_home
          - name: rustup_home
            path: /rustup_home
          - name: cargo_output
            path: /cargo_output
        outputs:
          - name: cargo_output
            path: /cargo_output
        params:
          CARGO_HOME: /cargo_home
          RUSTUP_HOME: /rustup_home
          CARGO_TARGET_DIR: /cargo_output
        run:
          dir: radicle-http-api
          path: /bin/bash
          args:
            - -c
            - |
              . "$HOME/.cargo/env"
              git --version
              cargo --version

              # cargo build --all-features
              RUST_BACKTRACE=1 cargo test --all-features | tee output.txt

    - task: env-vars
      image: runner-image
      config:
        platform: linux
        inputs:
          - name: radicle-http-api
        outputs: [ { name: git-facts } ]
        run:
          path: /bin/bash
          dir: radicle-http-api
          args:
            - -c
            - |
              git --version
              . "$HOME/.cargo/env"

              ## rev                        
              # Set source date. This is honored by `asciidoctor` and other tools.
              echo "$(git log -1 --pretty=%ct)" | tr -d '\n' > ../git-facts/source_date

              echo "$(git rev-parse --short HEAD)" | tr -d '\n' > ../git-facts/git_head

              version=`./build/version`

              echo "$version" | tr -d '\n' > ../git-facts/version
              
              cat ../git-facts/version
              ls -alh ../git-facts/
              pwd

    - put: git-params
      params:
        directory: git-facts



- name: build-and-push-images
  plan:
  - get: runner-image
    trigger: false
#    passed: [fetch-lint-build-test-release]
  - get: radicle-http-api
    trigger: false
#    passed: [fetch-lint-build-test-release]

  - get: git-data
    resource: git-params
    trigger: true
    passed: [fetch-lint-build-test-release]

  - load_var: source_date
    file: git-data/source_date
    format: raw
    reveal: true
  - load_var: git_head
    file: git-data/git_head
    format: raw
    reveal: true
  - load_var: version
    file: git-data/version
    format: raw
    reveal: true

  - task: build-http-api-image
    privileged: true
    output_mapping:
      image: http-api-image
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: concourse/oci-build-task
      inputs:
      - name: radicle-http-api
      outputs:
      - name: image
      params:
        CONTEXT: radicle-http-api/
        DOCKERFILE: radicle-http-api/build/Dockerfile
        BUILD_ARG_LC_ALL: C
        BUILD_ARG_TZ: UTC0
        BUILD_ARG_GIT_COMMIT_TIME: ((.:source_date))
        BUILD_ARG_RADICLE_VERSION: ((.:version))
        BUILD_ARG_RAD_PASSPHRASE: ((signing_key_passphrase))
        BUILD_ARG_RAD_PRIVATE_KEY: ((signing_key))
        UNPACK_ROOTFS: true #allow this image to be reused in later steps, so we can extract the binaries from there
      run:
        path: build

  - task: keep-binaries
    image: http-api-image
    config:
      platform: linux
      outputs:
        - name: binaries
      params:
        RADICLE_VERSION: ((.:version))
      run:
        path: /bin/sh
        args:
          - -c
          - |
            ls -al /builds
            for arch in x86_64-apple-darwin x86_64-unknown-linux-musl aarch64-apple-darwin aarch64-unknown-linux-musl; do
                cp /builds/radicle-http-api_${RADICLE_VERSION}+${arch}.tar.xz binaries/
                cp /builds/radicle-http-api_${RADICLE_VERSION}+${arch}.tar.xz binaries/radicle-http-api_latest+${arch}.tar.xz
            done

    # push images
  - in_parallel:
      steps:
        - put: http-api-image
          params:
            image: http-api-image/image.tar
            version: ((.:version))
        - put: bucket
          params:
           file: binaries/radicle-http-api_((.:version))+aarch64-apple-darwin.tar.xz
           acl: public-read
        - put: bucket
          params:
           file: binaries/radicle-http-api_latest+aarch64-apple-darwin.tar.xz
           acl: public-read
        - put: bucket
          params:
           file: binaries/radicle-http-api_((.:version))+aarch64-unknown-linux-musl.tar.xz
           acl: public-read
        - put: bucket
          params:
           file: binaries/radicle-http-api_latest+aarch64-unknown-linux-musl.tar.xz
           acl: public-read
        - put: bucket
          params:
           file: binaries/radicle-http-api_((.:version))+x86_64-apple-darwin.tar.xz
           acl: public-read
        - put: bucket
          params:
           file: binaries/radicle-http-api_latest+x86_64-apple-darwin.tar.xz
           acl: public-read
        - put: bucket
          params:
           file: binaries/radicle-http-api_((.:version))+x86_64-unknown-linux-musl.tar.xz
           acl: public-read
        - put: bucket
          params:
           file: binaries/radicle-http-api_latest+x86_64-unknown-linux-musl.tar.xz
           acl: public-read

resource_types:
  - name: key-value
    type: registry-image
    source:
      repository: gstack/keyval-resource
  - name: git-resource-pinned
    type: registry-image
    source:
      repository: concourse/git-resource
      tag: 1.16.0

resources:
# The repo with our Dockerfile
- name: radicle-http-api
  type: git-resource-pinned
  icon: git
  source:
#    uri: https://github.com/cytechmobile/radicle-http-api.git
#    branch: feat/better_build
    uri: https://seed.radicle.gr/z3pDipgU1YJRBPfZzNsW3s31dgnAR.git
    branch: main
    search_remote_refs: true
    fetch_tags: true
#    tag_filter: refs/namespaces/z6MksFqXN3Yhqk8pTJdUGLwATkRfQvwZXPqR2qMEhbS9wzpT/refs/tags/v*
    git_config:
    - name: safe.directory
      value: /tmp/build/get

- name: http-api-image
  type: registry-image
  icon: docker
  source:
    repository: quay.io/radicle_in_containers/radicle-http-api
    tag: latest
    username: ((registry-username))
    password: ((registry-password))

- name: runner-image
  type: registry-image
  source:
    repository: quay.io/gsaslis/rust-git-builder
    tag: latest


- name: git-params
  type: key-value

- name: bucket
  type: s3
  source:
    bucket: radicle-releases
    regexp: radicle-http-api/(.*)
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    endpoint: minio-api.radicle.gr
